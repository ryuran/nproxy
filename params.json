{
  "name": "NProxy",
  "tagline": "A cli proxy tool specialised in file replacing",
  "body": "# NProxy\r\n\r\nA cli proxy tool specialized in file replacing\r\n\r\n[![Build Status](https://secure.travis-ci.org/goddyZhao/nproxy.png)](http://travis-ci.org/goddyZhao/nproxy)\r\n\r\n## Why NProxy\r\n\r\nMaybe you have such question as why NProxy when we have [Fiddler](http://www.fiddler2.com/fiddler2/), [Charles](http://www.charlesproxy.com/), [Rythem](http://www.alloyteam.com/2012/05/web-front-end-tool-rythem-1/) and [Tinyproxy](https://banu.com/tinyproxy/). Yes, there is no doubt that they are all great tools, however they don't meet my requirements:\r\n\r\n* Support Mac, Linux and Windows (especially Mac and Linux)\r\n* Support replacing combo files with separated source files\r\n* Support directory mapping\r\n\r\nThis is the main reason why NProxy is here. Besides, NProxy can improve the efficiency of my daily development for enterprise-level product with a bunch of complex building processes, which cost me lots of time.\r\n\r\nI've written a post named [NProxy: The Mjolnir for UI Developers](http://en.blog.goddyzhao.me/post/29470818841/nproxy-the-mjolnir-for-ui-developers)  and a keynote [NProxy: A Sharp Weapon for UI Developers](https://speakerdeck.com/u/goddyzhao/p/nproxy-a-sharp-weapon-for-ui-developers) to explain my reason for developing NProxy in detail.\r\n\r\n## Features\r\n\r\n* Support Mac, Linux and Windows  \r\n* Support both single file and combo file replacing\r\n* Support directory mapping with any files\r\n* Support both HTTP and HTTPS\r\n\r\n## Installation\r\n\r\n    npm install -g nproxy (node >= v0.8.x is required)\r\n\r\nIf you are not familiar with Node.js and NPM, you can visit the [How to install NProxy](https://github.com/goddyZhao/nproxy/wiki/How-to-install-NProxy) wiki page to get detail information about installation of NProxy\r\n\r\n## Usage\r\n    \r\n    nproxy -l replace_rule.js \r\n\r\n    Setting your browser's proxy to 127.0.0.1:port(8989 by default)\r\n\r\nIf you don't know how to set proxy for browser, please read this wiki: [How to set brower's proxy](https://github.com/goddyZhao/nproxy/wiki/How-to-set-browser's-proxy)\r\n\r\n\r\n### More Options:\r\n\r\n    Usage: nproxy [options]\r\n\r\n    Options:\r\n\r\n      -h, --help         output usage information\r\n      -V, --version      output the version number\r\n      -l, --list [list]  Specify the replace rule file\r\n      -p, --port [port]  Specify the port nproxy will listen on(8989 by default)\r\n      -t, --timeout [timeout] Specify the request timeout (5 seconds by default)\r\n\r\n## Template of Replace Rule file(should be a .js file)\r\n\r\n    module.exports = [\r\n\r\n      // 1. replace single file with local one\r\n      {\r\n        pattern: 'homepage.js',      // Match url you wanna replace\r\n        responder:  \"/home/goddyzhao/workspace/homepage.js\"\r\n      },\r\n\r\n      // 2. replace single file with web file\r\n      {\r\n        pattern: 'homepage.js',      // Match url you wanna replace\r\n        responder:  \"http://www.anotherwebsite.com/assets/js/homepage2.js\"\r\n      },\r\n\r\n      // 3. replace combo file with src with absolute file path\r\n      {\r\n        pattern: 'group/homepageTileFramework.*.js', \r\n        responder: [\r\n          '/home/goddyzhao/workspace/webapp/ui/homepage/js/a.js',\r\n          '/home/goddyzhao/workspace/webapp/ui/homepage/js/b.js',\r\n          '/home/goddyzhao/workspace/webapp/ui/homepage/js/c.js'\r\n        ] \r\n      },\r\n\r\n      // 4. replace combo file with src with relative file path and specified dir\r\n      {\r\n        pattern: 'group/homepageTileFramework.*.js',\r\n        responder: {\r\n          dir: '/home/goddyzhao/workspace/webapp/ui/homepage/js',\r\n          src: [\r\n            'a.js',\r\n            'b.js',\r\n            'c.js'\r\n          ]\r\n        }\r\n      },\r\n\r\n      // 5. Map server image directory to local image directory\r\n      {\r\n        pattern: 'ui/homepage/img',  // must be a string\r\n        responder: '/home/goddyzhao/image/' //must be a absolute directory path\r\n      },\r\n\r\n      // 6. Write responder with regular expression variables like $1, $2\r\n      {\r\n        pattern: /https?:\\/\\/[\\w\\.]*(?::\\d+)?\\/ui\\/(.*)_dev\\.(\\w+)/,\r\n        responder: 'http://localhost/proxy/$1.$2'\r\n      },\r\n\r\n      // 7. Map server image directory to local image directory with regular expression\r\n      // This simple rule can replace multiple directories to corresponding locale ones\r\n      // For Example, \r\n      //   http://host:port/ui/a/img/... => /home/a/image/...\r\n      //   http://host:port/ui/b/img/... => /home/b/image/...\r\n      //   http://host:port/ui/c/img/... => /home/c/image/...\r\n      //   ...\r\n      {\r\n        pattern: /ui\\/(.*)\\/img\\//,\r\n        responder: '/home/$1/image/'\r\n      }\r\n    ];\r\n\r\nYou can use the [template file](https://github.com/goddyzhao/nproxy/blob/master/replace-rule.sample.js) and replace it with your own configurations. \r\n\r\n## Quickly setup rule files for SF project\r\n\r\nFor UI Developers from SuccessFactors, here is a bonus for you guys. You can use the [sf-transfer](http://goddyzhao.github.com/sf-transfer) tool to transfer the combo xml file to NProxy rule file automatically!\r\n\r\n## License\r\n\r\nNProxy is available under the terms of the MIT License\r\n",
  "google": "UA-16320265-17",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}